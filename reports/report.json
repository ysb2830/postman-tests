{
  "collection": {
    "_": {
      "postman_id": "48c4b6e4-92d8-467c-84af-0d1ec4572b4b",
      "exporter_id": "26212561"
    },
    "item": [
      {
        "id": "1b6ea034-c6a4-43dd-a9ad-3909d43df69f",
        "name": "https://reqres.in/api/login",
        "request": {
          "description": {
            "content": "\n### Login API\n\nThis API endpoint is used to authenticate a user login.\n\n#### Request Body\n- `email` (string, required): The email address of the user.\n- `password` (string, required): The password of the user.\n\n#### Response\nThe response for this request is in JSON format and follows the schema below:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"token\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [
          {
            "_": {
              "postman_previewlanguage": "json"
            },
            "id": "2ea34a9c-ee87-4d61-8156-e2bf8166f294",
            "name": "https://reqres.in/api/login",
            "originalRequest": {
              "url": {
                "protocol": "https",
                "path": [
                  "api",
                  "login"
                ],
                "host": [
                  "reqres",
                  "in"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\": \"{{eve.holt@reqres.in}}\",\r\n    \"password\": \"{{1234}}\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "status": "Bad Request",
            "code": 400,
            "header": [
              {
                "key": "Date",
                "value": "Thu, 23 May 2024 06:33:15 GMT"
              },
              {
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              },
              {
                "key": "Content-Length",
                "value": "26"
              },
              {
                "key": "Connection",
                "value": "keep-alive"
              },
              {
                "key": "Report-To",
                "value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D\"}]}"
              },
              {
                "key": "Reporting-Endpoints",
                "value": "heroku-nel=https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D"
              },
              {
                "key": "Nel",
                "value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
              },
              {
                "key": "X-Powered-By",
                "value": "Express"
              },
              {
                "key": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "key": "Etag",
                "value": "W/\"1a-EGIcyP6BIiCXl5Gb1aph5CGf4VQ\""
              },
              {
                "key": "Via",
                "value": "1.1 vegur"
              },
              {
                "key": "CF-Cache-Status",
                "value": "DYNAMIC"
              },
              {
                "key": "Server",
                "value": "cloudflare"
              },
              {
                "key": "CF-RAY",
                "value": "8883036c3a61e011-NRT"
              }
            ],
            "body": "{\n    \"error\": \"user not found\"\n}",
            "cookie": []
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21be8f35-0a19-4147-b731-7fdf495be0cc",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                ""
              ],
              "_lastExecutionId": "d24b6dda-9eea-4ffd-acaf-8deab72bfaa1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cb3d6b6-e7d8-4ca1-9c76-09dcd8ce48e6",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "pm.test(\"Response must have the token property\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData).to.keys('token');\r",
                "});\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "759063a3-1cef-44ef-a12b-a9adbcefa6a8"
            }
          }
        ]
      },
      {
        "id": "352db746-5973-4bc6-931f-c44892fc1a08",
        "name": "https://reqres.in/api/users?page=2",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [
              {
                "key": "page",
                "value": "2"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "955f99ef-22be-479d-8f79-f2aeb06018d6",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Response status code is 200\", function () {\r",
                "    pm.expect(pm.response.code).to.equal(200);\r",
                "});\r",
                "\r",
                "\r",
                "pm.test(\"Response time is less than 200ms\", function () {\r",
                "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                "});\r",
                "\r",
                "\r",
                "pm.test(\"Content-Type header is application/json\", function () {\r",
                "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                "});\r",
                "\r",
                "\r",
                "pm.test(\"Support object is present and contains expected properties\", function () {\r",
                "    const responseData = pm.response.json();\r",
                "\r",
                "    pm.expect(responseData).to.be.an('object');\r",
                "    pm.expect(responseData.support).to.exist;\r",
                "    pm.expect(responseData.support.url).to.exist;\r",
                "    pm.expect(responseData.support.text).to.exist;\r",
                "});\r",
                ""
              ],
              "_lastExecutionId": "f07c6196-715c-47ca-8b28-e738dfece1c2"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "48c4b6e4-92d8-467c-84af-0d1ec4572b4b",
      "name": "reqres.in_test",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "e0707646-21f8-4193-b46f-1df210368c74",
    "values": []
  },
  "globals": {
    "id": "cd297b55-f8dd-45bb-923b-5ad9e075e1b8",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 527.5,
      "responseMin": 110,
      "responseMax": 945,
      "responseSd": 417.5,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716455353338,
      "completed": 1716455354534
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dbbb9291-edac-4d04-b3ba-4eb1de3f4b68",
          "httpRequestId": "e0d826f4-4657-4fe9-93db-d67e46658ce9"
        },
        "item": {
          "id": "1b6ea034-c6a4-43dd-a9ad-3909d43df69f",
          "name": "https://reqres.in/api/login",
          "request": {
            "description": {
              "content": "\n### Login API\n\nThis API endpoint is used to authenticate a user login.\n\n#### Request Body\n- `email` (string, required): The email address of the user.\n- `password` (string, required): The password of the user.\n\n#### Response\nThe response for this request is in JSON format and follows the schema below:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"token\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "api",
                "login"
              ],
              "host": [
                "reqres",
                "in"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2ea34a9c-ee87-4d61-8156-e2bf8166f294",
              "name": "https://reqres.in/api/login",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "reqres",
                    "in"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{eve.holt@reqres.in}}\",\r\n    \"password\": \"{{1234}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Date",
                  "value": "Thu, 23 May 2024 06:33:15 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "26"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Report-To",
                  "value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D\"}]}"
                },
                {
                  "key": "Reporting-Endpoints",
                  "value": "heroku-nel=https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D"
                },
                {
                  "key": "Nel",
                  "value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
                },
                {
                  "key": "X-Powered-By",
                  "value": "Express"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Etag",
                  "value": "W/\"1a-EGIcyP6BIiCXl5Gb1aph5CGf4VQ\""
                },
                {
                  "key": "Via",
                  "value": "1.1 vegur"
                },
                {
                  "key": "CF-Cache-Status",
                  "value": "DYNAMIC"
                },
                {
                  "key": "Server",
                  "value": "cloudflare"
                },
                {
                  "key": "CF-RAY",
                  "value": "8883036c3a61e011-NRT"
                }
              ],
              "body": "{\n    \"error\": \"user not found\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "21be8f35-0a19-4147-b731-7fdf495be0cc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "d24b6dda-9eea-4ffd-acaf-8deab72bfaa1"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4cb3d6b6-e7d8-4ca1-9c76-09dcd8ce48e6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "pm.test(\"Response must have the token property\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.keys('token');\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "759063a3-1cef-44ef-a12b-a9adbcefa6a8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "\n### Login API\n\nThis API endpoint is used to authenticate a user login.\n\n#### Request Body\n- `email` (string, required): The email address of the user.\n- `password` (string, required): The password of the user.\n\n#### Response\nThe response for this request is in JSON format and follows the schema below:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"token\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "login"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b6702663-467c-49e6-a8ac-b67e97a66bd6",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "63",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "03b2b966-054f-4dad-a41f-298ef4e20d2f",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Date",
              "value": "Thu, 23 May 2024 09:09:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "26"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Report-To",
              "value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1716455353&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=lEYBTdvBw2eBWpQMzzpBumcj%2BriT6T8MeGCvSmECoX4%3D\"}]}"
            },
            {
              "key": "Reporting-Endpoints",
              "value": "heroku-nel=https://nel.heroku.com/reports?ts=1716455353&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=lEYBTdvBw2eBWpQMzzpBumcj%2BriT6T8MeGCvSmECoX4%3D"
            },
            {
              "key": "Nel",
              "value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"1a-EGIcyP6BIiCXl5Gb1aph5CGf4VQ\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "CF-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "8883e7e759e5f5e1-NRT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 945,
          "responseSize": 26
        },
        "id": "1b6ea034-c6a4-43dd-a9ad-3909d43df69f",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response must have the token property",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response must have the token property",
              "message": "expected { error: 'user not found' } to have key 'token'",
              "stack": "AssertionError: expected { error: 'user not found' } to have key 'token'\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "cd963a47-4994-4576-a7ac-509ea8f1d60c",
          "length": 2,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aa51de2e-6440-400b-9e2c-291dd97518c2"
        },
        "item": {
          "id": "352db746-5973-4bc6-931f-c44892fc1a08",
          "name": "https://reqres.in/api/users?page=2",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "api",
                "users"
              ],
              "host": [
                "reqres",
                "in"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "955f99ef-22be-479d-8f79-f2aeb06018d6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Response status code is 200\", function () {\r",
                  "    pm.expect(pm.response.code).to.equal(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", function () {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Content-Type header is application/json\", function () {\r",
                  "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Support object is present and contains expected properties\", function () {\r",
                  "    const responseData = pm.response.json();\r",
                  "\r",
                  "    pm.expect(responseData).to.be.an('object');\r",
                  "    pm.expect(responseData.support).to.exist;\r",
                  "    pm.expect(responseData.support.url).to.exist;\r",
                  "    pm.expect(responseData.support.text).to.exist;\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "f07c6196-715c-47ca-8b28-e738dfece1c2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "api",
              "users"
            ],
            "host": [
              "reqres",
              "in"
            ],
            "query": [
              {
                "key": "page",
                "value": "2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.37.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bfe076cb-102d-4447-b9c8-144154edf5f3",
              "system": true
            },
            {
              "key": "Host",
              "value": "reqres.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "8ecfb3ae-46c8-414f-8b78-a42dc762067d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Thu, 23 May 2024 09:09:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Report-To",
              "value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1715159475&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=qGuq4GdhviIjTCdvqz1ebqsWgGo8IYVtUxZrtpHWBGY%3D\"}]}"
            },
            {
              "key": "Reporting-Endpoints",
              "value": "heroku-nel=https://nel.heroku.com/reports?ts=1715159475&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=qGuq4GdhviIjTCdvqz1ebqsWgGo8IYVtUxZrtpHWBGY%3D"
            },
            {
              "key": "Nel",
              "value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
            },
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Etag",
              "value": "W/\"406-ut0vzoCuidvyMf8arZpMpJ6ZRDw\""
            },
            {
              "key": "Via",
              "value": "1.1 vegur"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=14400"
            },
            {
              "key": "CF-Cache-Status",
              "value": "HIT"
            },
            {
              "key": "Age",
              "value": "437"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "8883e7ec7801f5e1-NRT"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              112,
              97,
              103,
              101,
              34,
              58,
              50,
              44,
              34,
              112,
              101,
              114,
              95,
              112,
              97,
              103,
              101,
              34,
              58,
              54,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              49,
              50,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              95,
              112,
              97,
              103,
              101,
              115,
              34,
              58,
              50,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              109,
              105,
              99,
              104,
              97,
              101,
              108,
              46,
              108,
              97,
              119,
              115,
              111,
              110,
              64,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              105,
              99,
              104,
              97,
              101,
              108,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              76,
              97,
              119,
              115,
              111,
              110,
              34,
              44,
              34,
              97,
              118,
              97,
              116,
              97,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              105,
              109,
              103,
              47,
              102,
              97,
              99,
              101,
              115,
              47,
              55,
              45,
              105,
              109,
              97,
              103,
              101,
              46,
              106,
              112,
              103,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              56,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              108,
              105,
              110,
              100,
              115,
              97,
              121,
              46,
              102,
              101,
              114,
              103,
              117,
              115,
              111,
              110,
              64,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              76,
              105,
              110,
              100,
              115,
              97,
              121,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              70,
              101,
              114,
              103,
              117,
              115,
              111,
              110,
              34,
              44,
              34,
              97,
              118,
              97,
              116,
              97,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              105,
              109,
              103,
              47,
              102,
              97,
              99,
              101,
              115,
              47,
              56,
              45,
              105,
              109,
              97,
              103,
              101,
              46,
              106,
              112,
              103,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              57,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              116,
              111,
              98,
              105,
              97,
              115,
              46,
              102,
              117,
              110,
              107,
              101,
              64,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              111,
              98,
              105,
              97,
              115,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              70,
              117,
              110,
              107,
              101,
              34,
              44,
              34,
              97,
              118,
              97,
              116,
              97,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              105,
              109,
              103,
              47,
              102,
              97,
              99,
              101,
              115,
              47,
              57,
              45,
              105,
              109,
              97,
              103,
              101,
              46,
              106,
              112,
              103,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              48,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              98,
              121,
              114,
              111,
              110,
              46,
              102,
              105,
              101,
              108,
              100,
              115,
              64,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              66,
              121,
              114,
              111,
              110,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              70,
              105,
              101,
              108,
              100,
              115,
              34,
              44,
              34,
              97,
              118,
              97,
              116,
              97,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              105,
              109,
              103,
              47,
              102,
              97,
              99,
              101,
              115,
              47,
              49,
              48,
              45,
              105,
              109,
              97,
              103,
              101,
              46,
              106,
              112,
              103,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              49,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              103,
              101,
              111,
              114,
              103,
              101,
              46,
              101,
              100,
              119,
              97,
              114,
              100,
              115,
              64,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              114,
              103,
              101,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              100,
              119,
              97,
              114,
              100,
              115,
              34,
              44,
              34,
              97,
              118,
              97,
              116,
              97,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              105,
              109,
              103,
              47,
              102,
              97,
              99,
              101,
              115,
              47,
              49,
              49,
              45,
              105,
              109,
              97,
              103,
              101,
              46,
              106,
              112,
              103,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              50,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              114,
              97,
              99,
              104,
              101,
              108,
              46,
              104,
              111,
              119,
              101,
              108,
              108,
              64,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              97,
              99,
              104,
              101,
              108,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              72,
              111,
              119,
              101,
              108,
              108,
              34,
              44,
              34,
              97,
              118,
              97,
              116,
              97,
              114,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              105,
              109,
              103,
              47,
              102,
              97,
              99,
              101,
              115,
              47,
              49,
              50,
              45,
              105,
              109,
              97,
              103,
              101,
              46,
              106,
              112,
              103,
              34,
              125,
              93,
              44,
              34,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              34,
              58,
              123,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              114,
              101,
              113,
              114,
              101,
              115,
              46,
              105,
              110,
              47,
              35,
              115,
              117,
              112,
              112,
              111,
              114,
              116,
              45,
              104,
              101,
              97,
              100,
              105,
              110,
              103,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              84,
              111,
              32,
              107,
              101,
              101,
              112,
              32,
              82,
              101,
              113,
              82,
              101,
              115,
              32,
              102,
              114,
              101,
              101,
              44,
              32,
              99,
              111,
              110,
              116,
              114,
              105,
              98,
              117,
              116,
              105,
              111,
              110,
              115,
              32,
              116,
              111,
              119,
              97,
              114,
              100,
              115,
              32,
              115,
              101,
              114,
              118,
              101,
              114,
              32,
              99,
              111,
              115,
              116,
              115,
              32,
              97,
              114,
              101,
              32,
              97,
              112,
              112,
              114,
              101,
              99,
              105,
              97,
              116,
              101,
              100,
              33,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 110,
          "responseSize": 1030
        },
        "id": "352db746-5973-4bc6-931f-c44892fc1a08",
        "assertions": [
          {
            "assertion": "Response status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response time is less than 200ms",
            "skipped": false
          },
          {
            "assertion": "Content-Type header is application/json",
            "skipped": false
          },
          {
            "assertion": "Support object is present and contains expected properties",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1056
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 400",
          "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "1b6d82fd325bf4b22cff01833651aec6",
          "id": "9bf98f3b-741f-486b-94ab-afa8c09601ca",
          "timestamp": 1716455354356,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1b6ea034-c6a4-43dd-a9ad-3909d43df69f",
          "name": "https://reqres.in/api/login",
          "request": {
            "description": {
              "content": "\n### Login API\n\nThis API endpoint is used to authenticate a user login.\n\n#### Request Body\n- `email` (string, required): The email address of the user.\n- `password` (string, required): The password of the user.\n\n#### Response\nThe response for this request is in JSON format and follows the schema below:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"token\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "api",
                "login"
              ],
              "host": [
                "reqres",
                "in"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2ea34a9c-ee87-4d61-8156-e2bf8166f294",
              "name": "https://reqres.in/api/login",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "reqres",
                    "in"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{eve.holt@reqres.in}}\",\r\n    \"password\": \"{{1234}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Date",
                  "value": "Thu, 23 May 2024 06:33:15 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "26"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Report-To",
                  "value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D\"}]}"
                },
                {
                  "key": "Reporting-Endpoints",
                  "value": "heroku-nel=https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D"
                },
                {
                  "key": "Nel",
                  "value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
                },
                {
                  "key": "X-Powered-By",
                  "value": "Express"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Etag",
                  "value": "W/\"1a-EGIcyP6BIiCXl5Gb1aph5CGf4VQ\""
                },
                {
                  "key": "Via",
                  "value": "1.1 vegur"
                },
                {
                  "key": "CF-Cache-Status",
                  "value": "DYNAMIC"
                },
                {
                  "key": "Server",
                  "value": "cloudflare"
                },
                {
                  "key": "CF-RAY",
                  "value": "8883036c3a61e011-NRT"
                }
              ],
              "body": "{\n    \"error\": \"user not found\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "21be8f35-0a19-4147-b731-7fdf495be0cc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "d24b6dda-9eea-4ffd-acaf-8deab72bfaa1"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4cb3d6b6-e7d8-4ca1-9c76-09dcd8ce48e6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "pm.test(\"Response must have the token property\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.keys('token');\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "759063a3-1cef-44ef-a12b-a9adbcefa6a8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "48c4b6e4-92d8-467c-84af-0d1ec4572b4b",
            "exporter_id": "26212561"
          },
          "item": [
            {
              "id": "1b6ea034-c6a4-43dd-a9ad-3909d43df69f",
              "name": "https://reqres.in/api/login",
              "request": {
                "description": {
                  "content": "\n### Login API\n\nThis API endpoint is used to authenticate a user login.\n\n#### Request Body\n- `email` (string, required): The email address of the user.\n- `password` (string, required): The password of the user.\n\n#### Response\nThe response for this request is in JSON format and follows the schema below:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"token\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "reqres",
                    "in"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "2ea34a9c-ee87-4d61-8156-e2bf8166f294",
                  "name": "https://reqres.in/api/login",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "api",
                        "login"
                      ],
                      "host": [
                        "reqres",
                        "in"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"email\": \"{{eve.holt@reqres.in}}\",\r\n    \"password\": \"{{1234}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Date",
                      "value": "Thu, 23 May 2024 06:33:15 GMT"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "key": "Content-Length",
                      "value": "26"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Report-To",
                      "value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D\"}]}"
                    },
                    {
                      "key": "Reporting-Endpoints",
                      "value": "heroku-nel=https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D"
                    },
                    {
                      "key": "Nel",
                      "value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "Express"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Etag",
                      "value": "W/\"1a-EGIcyP6BIiCXl5Gb1aph5CGf4VQ\""
                    },
                    {
                      "key": "Via",
                      "value": "1.1 vegur"
                    },
                    {
                      "key": "CF-Cache-Status",
                      "value": "DYNAMIC"
                    },
                    {
                      "key": "Server",
                      "value": "cloudflare"
                    },
                    {
                      "key": "CF-RAY",
                      "value": "8883036c3a61e011-NRT"
                    }
                  ],
                  "body": "{\n    \"error\": \"user not found\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "21be8f35-0a19-4147-b731-7fdf495be0cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "d24b6dda-9eea-4ffd-acaf-8deab72bfaa1"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4cb3d6b6-e7d8-4ca1-9c76-09dcd8ce48e6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"Response must have the token property\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData).to.keys('token');\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "759063a3-1cef-44ef-a12b-a9adbcefa6a8"
                  }
                }
              ]
            },
            {
              "id": "352db746-5973-4bc6-931f-c44892fc1a08",
              "name": "https://reqres.in/api/users?page=2",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "reqres",
                    "in"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "2"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "955f99ef-22be-479d-8f79-f2aeb06018d6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Response status code is 200\", function () {\r",
                      "    pm.expect(pm.response.code).to.equal(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Content-Type header is application/json\", function () {\r",
                      "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Support object is present and contains expected properties\", function () {\r",
                      "    const responseData = pm.response.json();\r",
                      "\r",
                      "    pm.expect(responseData).to.be.an('object');\r",
                      "    pm.expect(responseData.support).to.exist;\r",
                      "    pm.expect(responseData.support.url).to.exist;\r",
                      "    pm.expect(responseData.support.text).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f07c6196-715c-47ca-8b28-e738dfece1c2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "48c4b6e4-92d8-467c-84af-0d1ec4572b4b",
            "name": "reqres.in_test",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dbbb9291-edac-4d04-b3ba-4eb1de3f4b68",
          "httpRequestId": "e0d826f4-4657-4fe9-93db-d67e46658ce9",
          "scriptId": "4cb3d6b6-e7d8-4ca1-9c76-09dcd8ce48e6",
          "execution": "759063a3-1cef-44ef-a12b-a9adbcefa6a8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response must have the token property",
          "message": "expected { error: 'user not found' } to have key 'token'",
          "stack": "AssertionError: expected { error: 'user not found' } to have key 'token'\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "f54f3115d20dd7a4cbc7432f8885126b",
          "id": "f97c47a2-7ea5-402d-aad0-d4b563d69477",
          "timestamp": 1716455354360,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "1b6ea034-c6a4-43dd-a9ad-3909d43df69f",
          "name": "https://reqres.in/api/login",
          "request": {
            "description": {
              "content": "\n### Login API\n\nThis API endpoint is used to authenticate a user login.\n\n#### Request Body\n- `email` (string, required): The email address of the user.\n- `password` (string, required): The password of the user.\n\n#### Response\nThe response for this request is in JSON format and follows the schema below:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"token\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "api",
                "login"
              ],
              "host": [
                "reqres",
                "in"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2ea34a9c-ee87-4d61-8156-e2bf8166f294",
              "name": "https://reqres.in/api/login",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "reqres",
                    "in"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{eve.holt@reqres.in}}\",\r\n    \"password\": \"{{1234}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Date",
                  "value": "Thu, 23 May 2024 06:33:15 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "26"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Report-To",
                  "value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D\"}]}"
                },
                {
                  "key": "Reporting-Endpoints",
                  "value": "heroku-nel=https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D"
                },
                {
                  "key": "Nel",
                  "value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
                },
                {
                  "key": "X-Powered-By",
                  "value": "Express"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Etag",
                  "value": "W/\"1a-EGIcyP6BIiCXl5Gb1aph5CGf4VQ\""
                },
                {
                  "key": "Via",
                  "value": "1.1 vegur"
                },
                {
                  "key": "CF-Cache-Status",
                  "value": "DYNAMIC"
                },
                {
                  "key": "Server",
                  "value": "cloudflare"
                },
                {
                  "key": "CF-RAY",
                  "value": "8883036c3a61e011-NRT"
                }
              ],
              "body": "{\n    \"error\": \"user not found\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "21be8f35-0a19-4147-b731-7fdf495be0cc",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "d24b6dda-9eea-4ffd-acaf-8deab72bfaa1"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4cb3d6b6-e7d8-4ca1-9c76-09dcd8ce48e6",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "pm.test(\"Response must have the token property\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData).to.keys('token');\r",
                  "});\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "759063a3-1cef-44ef-a12b-a9adbcefa6a8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "48c4b6e4-92d8-467c-84af-0d1ec4572b4b",
            "exporter_id": "26212561"
          },
          "item": [
            {
              "id": "1b6ea034-c6a4-43dd-a9ad-3909d43df69f",
              "name": "https://reqres.in/api/login",
              "request": {
                "description": {
                  "content": "\n### Login API\n\nThis API endpoint is used to authenticate a user login.\n\n#### Request Body\n- `email` (string, required): The email address of the user.\n- `password` (string, required): The password of the user.\n\n#### Response\nThe response for this request is in JSON format and follows the schema below:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"token\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "login"
                  ],
                  "host": [
                    "reqres",
                    "in"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "2ea34a9c-ee87-4d61-8156-e2bf8166f294",
                  "name": "https://reqres.in/api/login",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "api",
                        "login"
                      ],
                      "host": [
                        "reqres",
                        "in"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n    \"email\": \"{{eve.holt@reqres.in}}\",\r\n    \"password\": \"{{1234}}\"\r\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Date",
                      "value": "Thu, 23 May 2024 06:33:15 GMT"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "key": "Content-Length",
                      "value": "26"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Report-To",
                      "value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D\"}]}"
                    },
                    {
                      "key": "Reporting-Endpoints",
                      "value": "heroku-nel=https://nel.heroku.com/reports?ts=1716445995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RxRRIEA604dK4J6j%2BLPXJivNzYX3v7P2HJCvKFPUvwY%3D"
                    },
                    {
                      "key": "Nel",
                      "value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "Express"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Etag",
                      "value": "W/\"1a-EGIcyP6BIiCXl5Gb1aph5CGf4VQ\""
                    },
                    {
                      "key": "Via",
                      "value": "1.1 vegur"
                    },
                    {
                      "key": "CF-Cache-Status",
                      "value": "DYNAMIC"
                    },
                    {
                      "key": "Server",
                      "value": "cloudflare"
                    },
                    {
                      "key": "CF-RAY",
                      "value": "8883036c3a61e011-NRT"
                    }
                  ],
                  "body": "{\n    \"error\": \"user not found\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "21be8f35-0a19-4147-b731-7fdf495be0cc",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "d24b6dda-9eea-4ffd-acaf-8deab72bfaa1"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4cb3d6b6-e7d8-4ca1-9c76-09dcd8ce48e6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "pm.test(\"Response must have the token property\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData).to.keys('token');\r",
                      "});\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "759063a3-1cef-44ef-a12b-a9adbcefa6a8"
                  }
                }
              ]
            },
            {
              "id": "352db746-5973-4bc6-931f-c44892fc1a08",
              "name": "https://reqres.in/api/users?page=2",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "api",
                    "users"
                  ],
                  "host": [
                    "reqres",
                    "in"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "2"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "955f99ef-22be-479d-8f79-f2aeb06018d6",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Response status code is 200\", function () {\r",
                      "    pm.expect(pm.response.code).to.equal(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", function () {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Content-Type header is application/json\", function () {\r",
                      "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Support object is present and contains expected properties\", function () {\r",
                      "    const responseData = pm.response.json();\r",
                      "\r",
                      "    pm.expect(responseData).to.be.an('object');\r",
                      "    pm.expect(responseData.support).to.exist;\r",
                      "    pm.expect(responseData.support.url).to.exist;\r",
                      "    pm.expect(responseData.support.text).to.exist;\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "f07c6196-715c-47ca-8b28-e738dfece1c2"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "48c4b6e4-92d8-467c-84af-0d1ec4572b4b",
            "name": "reqres.in_test",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dbbb9291-edac-4d04-b3ba-4eb1de3f4b68",
          "httpRequestId": "e0d826f4-4657-4fe9-93db-d67e46658ce9",
          "scriptId": "4cb3d6b6-e7d8-4ca1-9c76-09dcd8ce48e6",
          "execution": "759063a3-1cef-44ef-a12b-a9adbcefa6a8"
        }
      }
    ],
    "error": null
  }
}